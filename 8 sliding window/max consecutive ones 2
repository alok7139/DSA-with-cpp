/*
Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

 

Example 1:

Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
*/
    int longestOnes(vector<int>& arr, int k) {
         int left=0,right=0,len=0;
         int n=arr.size();
    int countzeroes=0;
    vector<int>v(n,-1);
    while(right<n){
        if(arr[right]==0){
            countzeroes++;
        }
        while(countzeroes>k){
            if(arr[left]==0){
                countzeroes--;
            }
            left++;
        }

        int length=right-left+1;
             len=max(len,length);
             right++;

         
    }
    return len;
        
    }