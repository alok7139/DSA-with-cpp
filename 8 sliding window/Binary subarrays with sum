/*
Given a binary array nums and an integer goal, return the number of non-empty subarrays with a sum goal.

A subarray is a contiguous part of the array.

 

Example 1:

Input: nums = [1,0,1,0,1], goal = 2
Output: 4
Explanation: The 4 subarrays are bolded and underlined below:
[1,0,1,0,1]
[1,0,1,0,1]
[1,0,1,0,1]
[1,0,1,0,1]

*/
    int numSubarraysWithSum(vector<int>& arr, int k) {
        int n=arr.size();
        int count=0;
        int sum=0;
        map<int,int>p;
        for(int i=0;i<n;i++){
            sum += arr[i];
            if(sum==k){
                count++;
            }
            if(p.find(sum-k)!=p.end()){
               count += p[sum-k];
            }
            p[sum]++;
        }
        return count;
        
    }