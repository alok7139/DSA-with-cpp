/*
You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.

Return the length of the longest substring containing the same letter you can get after performing the above operations.

 

Example 1:

Input: s = "ABAB", k = 2
Output: 4
Explanation: Replace the two 'A's with two 'B's or vice versa.

*/
    int characterReplacement(string s, int k) {
        map<char,int>p;
    int left = 0, len = 0,right=0;
    int freq=0;
    int n = s.size();
    while(right<n){
        p[s[right]]++;
        freq=max(freq,p[s[right]]);
        while(right-left+1-freq>k){
            p[s[left]]--;
            left++;
        }
        len=max(len,right-left+1);
        right++;
    }
      return len;
    }