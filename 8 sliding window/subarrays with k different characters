/*
Given an integer array nums and an integer k, return the number of good subarrays of nums.

A good array is an array where the number of different integers in that array is exactly k.

For example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.
A subarray is a contiguous part of an array.

 

Example 1:

Input: nums = [1,2,1,2,3], k = 2
Output: 7
Explanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2]
*/
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        int n=nums.size();
        return atmost(nums,n,k)-atmost(nums,n,k-1);
    }
    int atmost(vector<int>&nums,int n,int k){
        unordered_map<int,int>mp;
        int left = 0,len=0;
        for(int i=0;i<n;i++){
            mp[nums[i]]++;
            while(mp.size()>k){
               mp[nums[left]]--;
               if(mp[nums[left]]==0){
                mp.erase(nums[left]);
               }
               left++;
            }
            len += i-left+1;
        }
        return len;
    }