/*
Given a string s and a dictionary of strings wordDict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in any order.

Note that the same word in the dictionary may be reused multiple times in the segmentation.

 

Example 1:

Input: s = "catsanddog", wordDict = ["cat","cats","and","sand","dog"]
Output: ["cats and dog","cat sand dog"]
*/
    vector<string> wordBreak(string s, vector<string>& wordDict) {
        set<string>st(wordDict.begin(),wordDict.end());
        vector<string>ans;
        generate(ans,st,s,"",0);
        return ans;
        
    }
    void generate(vector<string>&ans,set<string>&st,string s,string output,int ind){
         if(ind>=s.size()){
             output.pop_back();
             ans.push_back(output);
             return ;
         }
         string temp;
         for(int i=ind;i<s.size();i++){
             temp += s[i];
             if(st.count(temp)>0){
                 generate(ans,st,s,output+temp+" ",i+1);
             }
         }
    }