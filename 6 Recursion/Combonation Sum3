/*
Find all valid combinations of k numbers that sum up to n such that the following conditions are true:

Only numbers 1 through 9 are used.
Each number is used at most once.
Return a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.

 

Example 1:

Input: k = 3, n = 7
Output: [[1,2,4]]
Explanation:
1 + 2 + 4 = 7
There are no other valid combinations.
*/
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<int>arr={1,2,3,4,5,6,7,8,9};
        vector<vector<int>>ans;
        vector<int>v;
        generate(ans,arr,v,k,n,0);
        return ans;
    }
    void generate(vector<vector<int>>&ans,vector<int>&arr,vector<int>&v,int k, int target,int ind){
        if(k==0){
            if(target==0){
                ans.push_back(v);
                return;
            }
        }
        for(int i=ind;i<arr.size();i++){
            v.push_back(arr[i]);
            generate(ans,arr,v,k-1,target-arr[i],i+1);
            v.pop_back();
        }
    }