/*
You are given an integer 'N', your task is to generate all combinations of well-formed parenthesis having ‘N’ pairs.



A parenthesis is called well-formed if it is balanced i.e. each left parenthesis has a matching right parenthesis and the matched pairs are well nested.



For Example:

For ‘N’ = 3,
All possible combinations are: 
((()))
(()())
(())()
()(())
()()()
*/
void generate(vector<string>&ans, int n,int open,int close,string str){
    if(str.size()==n*2){
        ans.push_back(str);
        return;
    }
    if(open<n) generate(ans,n, open+1,close,str+'(');
    if(close<open) generate(ans,n,open,close+1,str+')');
}
vector<string> validParenthesis(int n){
    // Write your code here.
    vector<string>ans;
    generate(ans,n,0,0,"");
    return ans;
}