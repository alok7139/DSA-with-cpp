/*
Given the root of a binary search tree and an integer k, return true if there exist two elements in the BST such that their sum is equal to k, or false otherwise.

 

Example 1:


Input: root = [5,3,6,2,4,null,7], k = 9
Output: true
*/
bool findTarget(TreeNode* root, int k) {
    if(root==nullptr){
        return true;
    }
    vector<long long>ans;
    helper(root,ans);
    int i=0,j=ans.size()-1;
    while(i<j){
        long sum=ans[i]+ans[j];
        if(sum==k){
            return true;
        }
        else if(sum>k){
            j--;
        }
        else{
            i++;
        }
    }
    return false;
    
}
void helper(TreeNode* root,vector<long long>&ans){
    if(root==nullptr){
        return;
    }
    helper(root->left,ans);
    ans.push_back(root->val);
    helper(root->right,ans);
}