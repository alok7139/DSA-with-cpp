/*
Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.

 

Example 1:


Input: head = [1,2,3,4,5]
Output: [3,4,5]
Explanation: The middle node of the list is node 3.
*/
 ListNode* middleNode(ListNode* head) {
        if(head==nullptr or head->next==nullptr){
            return head;
        }
        ListNode*fast=head;
        ListNode*slow=head;
        while( fast!=nullptr and fast->next!=nullptr){
            fast=fast->next->next;
            slow=slow->next;
        }
        return slow;
        
    }